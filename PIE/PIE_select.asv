function PIE_select(I1, I2,FileName,Method)

disp('select a region that you want to copy '); 
h = figure('MenuBar', 'none', 'Toolbar', 'none');  % open window
[masked_bw, xi, yi] = roipoly(I1);      % select mask

% extract mask (crop image)
[r,c] = find(masked_bw == 1);                      % find the max values
maxHeight = max(r) - min(r);                     % extract the height
maxWidth= max(c) - min(c);                     % extract the width
SRC = imcrop(I1,[min(c) min(r) maxWidth maxHeight]);  % crop the image in the RIO

% crop mask - make the mask RGB (3 layers)
Mc = zeros(size(SRC));                       % make a copy of Ic
Mc(:,:,1) = imcrop(masked_bw,[min(c) min(r) maxWidth maxHeight]);
Mc(:,:,2) = imcrop(masked_bw,[min(c) min(r) maxWidth maxHeight]);
Mc(:,:,3) = imcrop(masked_bw,[min(c) min(r) maxWidth maxHeight]);

% NOW SELECT PLACE TO PASTE
imshow(I2);
lh = line(xi, yi, 'Marker','.','LineStyle','-', 'Color', 'r', 'LineWidth',2);
% Set up units and callback functions
set(h, 'Units', 'pixels');
set(h,'WindowButtonDownFcn',@myButtonPressDown);
set(h,'WindowButtonUpFcn',@myButtonPressUp);
set(h, 'WindowButtonMotionFcn', @myMouseMotion);
set(h, 'KeyPressFcn', @myKeyPress);

myData.xi = xi-min(xi);
myData.yi = yi-min(yi);
myData.SRC = SRC;  
myData.TARGET = I2; %target
myData.Mc=Mc;  %maske
myData.pressDown = 0;
myData.line = lh;
myData.curX = -1;
myData.curY = -1;
myData.Method=Method;
myData.FileName=FileName;

set(h, 'UserData', myData);

return
%%
% When button is pressed, call this function
function myButtonPressDown(obj,event_obj)

myData = get(obj, 'UserData');      % get the user data (variable name does not have to be "myData"
myData.pressDown = 1;               % set mouse press = true
p = get(gca,'CurrentPoint');        % get current position of mouse on the image
curX = p(1,1);                      % extract the X position (it's a floating point value)
curY = p(1,2);                      % extract the Y positions
myData.curX = curX;
myData.curY = curY;
set(myData.line,'XData', myData.xi+curX, 'YData', myData.yi+curY);

% Save the myData variable back to the object
set(obj, 'UserData', myData);
return

%%
% When button is released, call this function
function myButtonPressUp(obj,event_obj)

myData = get(obj, 'UserData');  % get the user data
myData.pressDown = 0;           % set mouse press to be false
set(obj, 'UserData', myData);   % set the uer data (i.e. record mouse is not longer being pressed)

return

%%
% Called anytime the mouse is moved
function myMouseMotion(obj,event_obj)

myData = get(obj, 'UserData');  % get the user data

if (myData.pressDown == 1)              % we are only interested if the mouse is down
    p = get(gca,'CurrentPoint');        % get the current point from the image
    curX = p(1,1);                      % extract the point from the strange matlab datastructure return by previous line of code
    curY = p(1,2);
    set(myData.line,'XData', myData.xi+curX, 'YData', myData.yi+curY);
    myData.curX = curX;
    myData.curY = curY;
    set(obj, 'UserData', myData);
end
return


%%
% Call when key any pressed any key
%
function myKeyPress(obj, event_obj)

if (event_obj.Key == 'q')
    close(obj);
    return;
end

% Update the userdata in the object
myData = get(obj, 'UserData');
if (myData.pressDown == 0)          % if mouse is not pressed
    
    if (myData.curX == -1)
        disp('Select a location');
        return;
    end
    
    TARGET = myData.TARGET;
    SRC = myData.SRC;
    tx = round(myData.curX);
    ty = round(myData.curY);
    
    [hh ww depth] = size(SRC);
    
    %use only the ROI
    TRG(:,:,1)=TARGET( ty:(ty+hh-1), tx:(tx+ww-1), 1 );
    TRG(:,:,2)=TARGET( ty:(ty+hh-1), tx:(tx+ww-1), 2 );
    TRG(:,:,3)=TARGET( ty:(ty+hh-1), tx:(tx+ww-1), 3 );

    Mc = rgb2gray(myData.Mc);
    Mc(1,:)=0;
    Mc(end,:)=0;
    Mc(:,1)=0;
    Mc(:,end)=0;
    se = strel('disk',5);
    Mc = imerode( Mc,se);
    %% determing which method to use
    if myData.Method == 1
        newI = mixing_gradients(TRG,SRC,Mc);
    else 
        newI = importing_gradients(TRG,SRC,Mc);
    end
    %reconstruct

    TARGET( ty:(ty+hh-1), tx:(tx+ww-1), 1 ) =  newI(:,:,1);
    TARGET( ty:(ty+hh-1), tx:(tx+ww-1), 2 ) =  newI(:,:,2);
    TARGET( ty:(ty+hh-1), tx:(tx+ww-1), 3 ) =  newI(:,:,3);

%     imshow(TARGET);
%     imwrite(TARGET,myData.FileName);
end

return TARGET,tx,ty

